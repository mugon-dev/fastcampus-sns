spring:
  datasource:
    hikari.maximum-pool-size: 4
    url: jdbc:postgresql://ec2-52-22-136-117.compute-1.amazonaws.com/d54fo8jkqfctb2
    username: sinbdxokrvqfvu
    password: 8883670e7262f415e3ef2786473af9b8406555324bf23c2163e3f3c02f4cc1aa
    driver-class-name: org.postgresql.Driver
  jpa:
    database: postgresql
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      ddl-auto: update
    show-sql: true # 쿼리 보기
    properties:
      hibernate:
        format_sql: true # 한줄로 나오는 디버그 쿼리문을 포맷팅해줌
        default_batch_fetch_size: 100 # jpa에서 복잡한 쿼리를 사용할때 한번에 벌크로 셀렉트
    open-in-view: false
  sql:
    init:
      platform: postgres
  redis:
    url: redis://:p04901b191fdd5aa5817a48ce432f2a44bc4e133837c011b73b7b11b16eece333@ec2-23-23-247-176.compute-1.amazonaws.com:7719
  kafka:
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: SCRAM-SHA-256
      sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="csowptyq" password="HbZMmxHGACzlTnbUSUOqFeOJuGypwhNi";
    consumer:
      properties.spring.json.trusted.packages: "*"
      bootstrap-servers: dory-01.srvs.cloudkafka.com:9094,dory-02.srvs.cloudkafka.com:9094,dory-03.srvs.cloudkafka.com:9094
      group-id: alarm
      auto-offset-reset: latest # 새로운 consumer가 등록되었을때 어디서부터 읽을 것인지
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      ack-mode: MANUAL
    producer:
      bootstrap-servers: dory-01.srvs.cloudkafka.com:9094,dory-02.srvs.cloudkafka.com:9094,dory-03.srvs.cloudkafka.com:9094
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.enable.idempotence: false
    topic:
      alarm: csowptyq-alarm

jwt:
  secret-key: fast_campus_sns-application-2022.secret_key
  token:
    expired-time-ms: 2592000000 # 30days
